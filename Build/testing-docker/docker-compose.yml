version: '2.3'
services:
  cgl:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: "${HOST_UID}"
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
    working_dir: ${ROOT_DIR}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP';
        if [ ${PHP_XDEBUG_ON} -eq 0 ]; then
          php -dxdebug.mode=off \
            .Build/bin/php-cs-fixer fix \
              -v \
              ${CGLCHECK_DRY_RUN} \
              --config=.Build/vendor/typo3/coding-standards/templates/extension_php-cs-fixer.dist.php  \
              --using-cache=no Classes/ Resources/ Tests/
        else
          XDEBUG_MODE=\"debug,develop\" \
          XDEBUG_TRIGGER=\"foo\" \
          XDEBUG_CONFIG=\"client_host=host.docker.internal\" \
          PHP_CS_FIXER_ALLOW_XDEBUG=1 \
          .Build/bin/php-cs-fixer fix \
            -v \
            ${CGLCHECK_DRY_RUN} \
            --config=.Build/vendor/typo3/coding-standards/templates/extension_php-cs-fixer.dist.php  \
            --using-cache=no Classes/ Resources/ Tests/
        fi
      "

  composer_update:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: ${HOST_UID}
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
      - ${HOST_HOME}:${HOST_HOME}
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP';
        if [ ${DOCKER_PHP_IMAGE} = "php82" ]; then
            # @todo: Needed until prophecy (req by phpunit) allows PHP 8.2, https://github.com/phpspec/prophecy/issues/556
            composer update --no-progress --no-interaction --ignore-platform-req=php+
        else
            composer update --no-progress --no-interaction;
        fi
      "
  lint:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: ${HOST_UID}
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP';
        find . -name \\*.php ! -path "./.Build/\\*" ! -path "./public/\\*" -print0 | xargs -0 -n1 -P4 php -dxdebug.mode=off -l >/dev/null
      "

  phpstan:
      image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
      user: "${HOST_UID}"
      volumes:
          - ${ROOT_DIR}:${ROOT_DIR}
      working_dir: ${ROOT_DIR}
      command: >
          /bin/sh -c "
            if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
              set -x
            fi
            mkdir -p .Build/.cache
            php -v | grep '^PHP';
            php -dxdebug.mode=off .Build/bin/phpstan analyze -c Build/phpstan/phpstan.neon --no-progress --no-interaction
          "

  phpstan_generate_baseline:
      image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
      user: "${HOST_UID}"
      volumes:
          - ${ROOT_DIR}:${ROOT_DIR}
      working_dir: ${ROOT_DIR}
      command: >
          /bin/sh -c "
            if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
              set -x
            fi
            mkdir -p .Build/.cache
            php -v | grep '^PHP';
            php -dxdebug.mode=off .Build/bin/phpstan analyze -c Build/phpstan/phpstan.neon --no-progress --no-interaction --generate-baseline=Build/phpstan/phpstan-baseline.neon
          "

  unit:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: ${HOST_UID}
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
      - ${HOST_HOME}:${HOST_HOME}
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    working_dir: ${ROOT_DIR}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP';
        if [ ${PHP_XDEBUG_ON} -eq 0 ]; then
          XDEBUG_MODE=\"off\" \
          .Build/bin/phpunit Tests/Unit/;
        else
          XDEBUG_MODE=\"debug,develop\" \
          XDEBUG_TRIGGER=\"foo\" \
          XDEBUG_CONFIG=\"client_host=host.docker.internal\" \
          .Build/bin/phpunit Tests/Unit/;
        fi
      "
